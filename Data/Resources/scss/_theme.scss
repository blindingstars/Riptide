@charset "UTF-8";

// -------------
// Color Schemes
// -------------

// Oceanic Next theme by voronianski
// https://github.com/voronianski/oceanic-next-color-scheme

$oceanic-next: (
	red:    #EC5F67,
	orange: #F99157,
	yellow: #FAC863,
	green:  #99C794,
	teal:   #5FB3B3,
	blue:   #6699CC,
	purple: #C594C5,
	maroon: #AB7967
);

// base16 themes by chriskempson
// https://github.com/chriskempson/base16/

$solarized: (
	red:    #dc322f,
	orange: #cb4b16,
	yellow: #b58900,
	green:  #859900,
	teal:   #2aa198,
	blue:   #268bd2,
	purple: #6c71c4,
	maroon: #d33682,
);

$flat: (
	red:    #E74C3C,
	orange: #E67E22,
	yellow: #F1C40F,
	green:  #2ECC71,
	teal:   #1ABC9C,
	blue:   #3498DB,
	purple: #9B59B6,
	maroon: #be643c
);

$ocean: (
	red:    #bf616a,
	orange: #d08770,
	yellow: #ebcb8b,
	green:  #a3be8c,
	teal:   #96b5b4,
	blue:   #8fa1b3,
	purple: #b48ead,
	maroon: #ab7967
);

$chalk: (
	red:    #fb9fb1,
	orange: #eda987,
	yellow: #ddb26f,
	green:  #acc267,
	teal:   #12cfc0,
	blue:   #6fc2ef,
	purple: #e1a3ee,
	maroon: #deaf8f,
);

// Values for Color Math

$background: #1b2b34;
$mix-with: $background;
$mix-amount: 55%;
$saturate-amount: 15%;

// Color Math
// This could totally be written as a function, but lazy

$oceanic-next-dark: (
  red:    saturate(mix(map-get($oceanic-next, red),    $mix-with, $mix-amount), $saturate-amount),
  orange: saturate(mix(map-get($oceanic-next, orange), $mix-with, $mix-amount), $saturate-amount),
  yellow: saturate(mix(map-get($oceanic-next, yellow), $mix-with, $mix-amount), $saturate-amount),
  green:  saturate(mix(map-get($oceanic-next, green),  $mix-with, $mix-amount), $saturate-amount),
  teal:   saturate(mix(map-get($oceanic-next, teal),   $mix-with, $mix-amount), $saturate-amount),
  blue:   saturate(mix(map-get($oceanic-next, blue),   $mix-with, $mix-amount), $saturate-amount),
  purple: saturate(mix(map-get($oceanic-next, purple), $mix-with, $mix-amount), $saturate-amount),
  maroon: saturate(mix(map-get($oceanic-next, maroon), $mix-with, $mix-amount), $saturate-amount)
);

// -------
// General
// -------

* {
  margin: 0;
  padding: 0;
  font-size: 100%;
  -webkit-hyphens: auto;
          hyphens: auto;
  -webkit-word-break: break-word;
          word-wrap: break-word;
  -webkit-word-wrap: break-word;
          word-wrap: break-word;
}

@mixin transition($property: all, $duration: 0.15s, $style: ease-in-out) {
	transition: $property $duration $style;
}

$font-size: 12px;
$line-height: 1.4;

body {
  color: #DDDDDD;
  background-color: $background;
  height: 100%;
  z-index: 100;
  overflow: hidden;
  overflow-y: visible;
  font-family: "Helvetica Neue";
  font-size: $font-size;
  line-height: $line-height;
  font-weight: 200;
}

p {
  overflow: visible !important;
}

#body_home {
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  z-index: 100;
  max-height: 99.99%;
  position: absolute;
}

// -----
// Links
// -----

a {
  color: map-get($oceanic-next, blue);
  @include transition;
  text-decoration: none;
  border-bottom: 1px solid; // Inherits the text color
}

a:hover {
  color: lighten(map-get($oceanic-next, blue), 20%);
}

// ------
// Images
// ------

body a img {
  border: 0;
}

body video,
body img {
  display: block;
}

.inlineImageCell {
  position: relative;
  display: table;
  overflow: auto;
  width: auto;
  height: auto;
}

.inlineImageCell > a {
  display: inline-block;
  border: none;
}

.inlineImageCell .image {
  display: inline-block;
  float: left;
  margin: 15px 0;
  min-width: 100px;
}

.inlineImageCell .closeButton {
  background: map-get($oceanic-next-dark, green);
  color: map-get($oceanic-next, green);
  border-radius: 50%;
  position: absolute;
  box-sizing: border-box;
  box-shadow: 2px 2px 8px rgba(#000, 0.5);
  font-size: 12px !important;
  font-family: "Helvetica Neue" !important;
  font-weight: 700 !important;
  text-align: center;
  line-height: 18px;
  top: 5px;
  right: -7px;
  width: 20px;
  height: 20px;
  cursor: pointer;
  @include transition;

  &:hover {
  	background: darken(map-get($oceanic-next-dark, green), 15%);
  }
}

// -------------
// Remember Line
// -------------

// If you are not into rainbows, remove the background gradient and either
// set a 1px border or replace the gradient with a solid color

div[id=mark] {
  clear: both;
  height: 1px;
  background: linear-gradient(90deg,
              map-get($oceanic-next, red),
              map-get($oceanic-next, orange),
              map-get($oceanic-next, yellow),
              map-get($oceanic-next, green),
              map-get($oceanic-next, teal),
              map-get($oceanic-next, blue),
              map-get($oceanic-next, purple));
}


// ---------
// Topic bar
// ---------

#topic_bar {
  top: 0;
  left: 0;
  right: 0;
  z-index: 400;
  opacity: 0;
  color: map-get($oceanic-next, green);
  background-color: map-get($oceanic-next-dark, green);
  position: fixed;
  padding: 5px 5px 5px;
  -webkit-transition: opacity 0.90s linear;
  -webkit-transform: translateZ(0);
  -webkit-font-smoothing: subpixel-antialiased;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  font-weight: bold;
  font-size: 11px;
  box-shadow: 0 2px 10px rgba(#000, 0.5);

  a {
    color: rgba(#fff, 0.75);
  }
}

#topic_bar:hover {
  overflow: visible;
  white-space: normal;
}

// --------
// Messages
// --------

.line {
  padding: 3px 0;
  clear: both;
  min-height: ($font-size * $line-height);
}

div[ltype=privmsg] span.senderContainer,
div[ltype=notice] span.SenderContainer {
  width: 125px;
  padding: 0 10px;
  display: table-cell;
  text-align: right;
  font-weight: bold;
  font-style: normal;
  text-overflow: ellipsis;
}

div[ltype=action] span.senderContainer {
  padding: 0 3px 0 145px;
  display: table-cell;
  font-weight: bold;
  font-style: italic;
}

div[ltype=privmsg] span.innerMessage,
div[ltype=notice] span.innerMessage {
  display: table-cell;
}

div[ltype=action] span.innerMessage {
  font-style: italic;
}

div[ltype=action] span.innerMessage {
  display: table-cell;
}

div.event span.message {
  display: table-cell;
  padding-left: 145px;
}

div.event span.message, div[ltype=notice] span.message {
  font-size: 90%;
  color: rgba(map-get($oceanic-next, teal), 0.3);
  font-style: italic;

  a {
    opacity: 0.5;
  }
}

.inline_nickname {
  font-weight: 700;
}

.line[ltype=privmsg][highlight=true],
.line[ltype=action][highlight=true] {
  background-color: rgba(#000, 0.2);
  background: linear-gradient(90deg,
              rgba(map-get($oceanic-next, red), 0.15),
              rgba(map-get($oceanic-next, orange), 0.15),
              rgba(map-get($oceanic-next, yellow), 0.15),
              rgba(map-get($oceanic-next, green), 0.15),
              rgba(map-get($oceanic-next, teal), 0.15),
              rgba(map-get($oceanic-next, blue), 0.15),
              rgba(map-get($oceanic-next, purple), 0.15));
}

.sender[mtype*=myself] {
  color: map-get($oceanic-next, teal) !important;
}

div[mtype*=myself] {
  background-color: rgba(map-get($oceanic-next, teal), 0.1);
}

.line[ltype=join],
.line[ltype=part],
.line[ltype=quit],
.line[ltype=mode],
.line[ltype=nick],
.line[ltype=topic],
.line[ltype=website] {
  .message:before {
    display: inline-block;
    font-weight: normal;
    font-style: normal;
    opacity: 0.6;
    margin-left: -1.5em;
    padding-right: 0.4em;
  }
}

.line[ltype=join] {
  .message:before {
    @include icon(right-big);
    color: map-get($oceanic-next, green);
  }
}

.line[ltype=part],
.line[ltype=quit] {
  .message:before {
    @include icon(left-big);
    color: map-get($oceanic-next, red);
  }
}

.line[ltype=topic] {
  .message:before {
    @include icon(comment);
    color: map-get($oceanic-next, blue);
  }
}

.line[ltype=mode] {
  .message:before {
    @include icon(flash);
    color: map-get($oceanic-next, yellow);
  }
}

.line[ltype=nick] {
  .message:before {
    @include icon(user);
    color: map-get($oceanic-next, teal);
  }
}

.line[ltype=website] {
  .message:before {
    @include icon(globe);
    color: map-get($oceanic-next, purple);
  }
}

.time {
  display: table-cell;
  float: right;
  padding: 2px 10px;
  font-size: 75%;
  color: rgba(#fff, 0.2);
}

.historic {
  opacity: 0.50;
}

// -------------
// Selected User
// -------------

.senderContainer {
  cursor: pointer;
  overflow: hidden;
}

.line[ltype=privmsg]:not(.selectedUser),
.line[ltype=action]:not(.selectedUser) {
  transition-property: background-color;
  transition-duration: 0.5s, 0.5s, 0.5s;
}

.line[ltype=privmsg] .time:not(.selectedUser),
.line[ltype=action] .time:not(.selectedUser) {
  transition: color 0.5s;
}

.line.selectedUser[highlight=false] .time {
  transition: color 0.5s ease-in;
}

.line.selectedUser[highlight=false] {
  transition-property: background-color;
  transition-duration: 0.5s, 0.5s, 0.5s;
  z-index: 190;
  position: relative;
  background-color: rgba(map-get($oceanic-next, red), 0.2);
}

// --------------------
// User and Chat Colors
// --------------------

// Sometimes, users are assigned negative colornumbers.
// The $ in the attribute catches those cases too.

.sender[mtype*=normal][colornumber$='0'],
.inline_nickname[colornumber$='0'] {
  color: map-get($oceanic-next-dark, red) !important;
}

.sender[mtype*=normal][colornumber$='1'],
.inline_nickname[colornumber$='1'] {
  color: map-get($oceanic-next-dark, orange) !important;
}

.sender[mtype*=normal][colornumber$='2'],
.inline_nickname[colornumber$='2'] {
  color: map-get($oceanic-next-dark, yellow) !important;
}

.sender[mtype*=normal][colornumber$='3'],
.inline_nickname[colornumber$='3'] {
  color: map-get($oceanic-next-dark, green) !important;
}

.sender[mtype*=normal][colornumber$='4'],
.inline_nickname[colornumber$='4'] {
  color: map-get($oceanic-next-dark, teal) !important;
}

.sender[mtype*=normal][colornumber$='5'],
.inline_nickname[colornumber$='5'] {
  color: map-get($oceanic-next-dark, blue) !important;
}

.sender[mtype*=normal][colornumber$='6'],
.inline_nickname[colornumber$='6'] {
  color: map-get($oceanic-next-dark, purple) !important;
}

.sender[mtype*=normal][colornumber$='7'],
.inline_nickname[colornumber$='7'] {
  color: map-get($oceanic-next-dark, maroon) !important;
}

.sender[mtype*=normal][colornumber$='8'],
.inline_nickname[colornumber$='8'] {
  color: map-get($oceanic-next, red) !important;
}

.sender[mtype*=normal][colornumber$='9'],
.inline_nickname[colornumber$='9'] {
  color: map-get($oceanic-next, orange) !important;
}

.sender[mtype*=normal][colornumber$='10'],
.inline_nickname[colornumber$='10'] {
  color: map-get($oceanic-next, yellow) !important;
}

.sender[mtype*=normal][colornumber$='11'],
.inline_nickname[colornumber$='11'] {
  color: map-get($oceanic-next, green) !important;
}

.sender[mtype*=normal][colornumber$='12'],
.inline_nickname[colornumber$='12'] {
  color: map-get($oceanic-next, teal) !important;
}

.sender[mtype*=normal][colornumber$='13'],
.inline_nickname[colornumber$='13'] {
  color: map-get($oceanic-next, blue) !important;
}

.sender[mtype*=normal][colornumber$='14'],
.inline_nickname[colornumber$='14'] {
  color: map-get($oceanic-next, purple) !important;
}

.sender[mtype*=normal][colornumber$='15'],
.inline_nickname[colornumber$='15'] {
  color: map-get($oceanic-next, maroon) !important;
}

.sender[mtype*=normal][colornumber$='16'],
.inline_nickname[colornumber$='16'] {
  color: map-get($ocean, red) !important;
}

.sender[mtype*=normal][colornumber$='17'],
.inline_nickname[colornumber$='17'] {
  color: map-get($ocean, orange) !important;
}

.sender[mtype*=normal][colornumber$='18'],
.inline_nickname[colornumber$='18'] {
  color: map-get($ocean, yellow) !important;
}

.sender[mtype*=normal][colornumber$='19'],
.inline_nickname[colornumber$='19'] {
  color: map-get($ocean, green) !important;
}

.sender[mtype*=normal][colornumber$='20'],
.inline_nickname[colornumber$='20'] {
  color: map-get($ocean, teal) !important;
}

.sender[mtype*=normal][colornumber$='21'],
.inline_nickname[colornumber$='21'] {
  color: map-get($ocean, blue) !important;
}

.sender[mtype*=normal][colornumber$='22'],
.inline_nickname[colornumber$='22'] {
  color: map-get($ocean, purple) !important;
}

.sender[mtype*=normal][colornumber$='23'],
.inline_nickname[colornumber$='23'] {
  color: map-get($ocean, maroon) !important;
}

.sender[mtype*=normal][colornumber$='24'],
.inline_nickname[colornumber$='24'] {
  color: map-get($chalk, red) !important;
}

.sender[mtype*=normal][colornumber$='25'],
.inline_nickname[colornumber$='25'] {
  color: map-get($chalk, orange) !important;
}

.sender[mtype*=normal][colornumber$='26'],
.inline_nickname[colornumber$='26'] {
  color: map-get($chalk, yellow) !important;
}

.sender[mtype*=normal][colornumber$='27'],
.inline_nickname[colornumber$='27'],
.sender[nickname$="Serv"] { // ChanServ, NickServ, anyone trying to be witty with a *Serv nick
  color: map-get($chalk, green) !important;
}

.sender[mtype*=normal][colornumber$='28'],
.inline_nickname[colornumber$='28'] {
  color: map-get($chalk, teal) !important;
}

.sender[mtype*=normal][colornumber$='29'],
.inline_nickname[colornumber$='29'] {
  color: map-get($chalk, blue) !important;
}

.sender[mtype*=normal][colornumber$='30'],
.inline_nickname[colornumber$='30'] {
  color: map-get($chalk, purple) !important;
}

$effect-colors: (                          // Standard IRC colors
  0:  #EAEAEA,                             // White
  1:  #515151,                             // Black
  2:  map-get($oceanic-next-dark, blue),   // Dark Blue
  3:  map-get($oceanic-next-dark, green),  // Dark Green
  4:  map-get($oceanic-next-dark, red),    // Dark Red
  5:  map-get($oceanic-next-dark, maroon), // Dark Maroon
  6:  map-get($oceanic-next-dark, purple), // Dark Purple
  7:  map-get($oceanic-next,      orange), // Orange
  8:  map-get($oceanic-next,      yellow), // Yellow
  9:  map-get($oceanic-next,      green),  // Light Green
  10: map-get($oceanic-next-dark, teal),   // Dark Teal
  11: map-get($oceanic-next,      teal),   // Light Teal
  12: map-get($oceanic-next,      blue),   // Light Blue
  13: map-get($oceanic-next,      purple), // Light Purple
  14:     mix(#fff, $background,  0.8),    // Grey
  15:     mix(#fff, $background,  0.6),    // Light Grey

);

@each $color-number, $color-value in $effect-colors {
  .effect[color-number='#{$color-number}'] {
    color: $color-value !important;
  }

  .effect[bgcolor-number='#{$color-number}'] {
    background-color: $color-value !important;
  }
}